name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#env:
#  REGISTRY: docker.io
#  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install --no-root --no-interaction

    - name: Run linting
      run: poetry run make lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install --no-root --no-interaction

    - name: Run tests
      run: poetry run make test

#  build-and-push:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Log in to Docker Registry
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_LOGIN }}
#          password: ${{ secrets.DOCKER_PASS }}
#
#      - name: Set up Docker buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max